name: 🔄 Dependency Updates

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  update-dependencies:
    name: 📦 Update Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'
          cache-dependency-path: |
            backend/package-lock.json
            frontend/package-lock.json

      - name: 🔍 Check for Backend Updates
        id: backend-updates
        run: |
          cd backend
          npm outdated --json > outdated.json || true
          if [ -s outdated.json ]; then
            echo "updates=true" >> $GITHUB_OUTPUT
            echo "📦 Backend dependencies have updates available"
          else
            echo "updates=false" >> $GITHUB_OUTPUT
            echo "✅ All backend dependencies are up to date"
          fi
          cat outdated.json

      - name: 🔍 Check for Frontend Updates
        id: frontend-updates
        run: |
          cd frontend
          npm outdated --json > outdated.json || true
          if [ -s outdated.json ]; then
            echo "updates=true" >> $GITHUB_OUTPUT
            echo "📦 Frontend dependencies have updates available"
          else
            echo "updates=false" >> $GITHUB_OUTPUT
            echo "✅ All frontend dependencies are up to date"
          fi
          cat outdated.json

      - name: 🔄 Update Backend Dependencies
        if: steps.backend-updates.outputs.updates == 'true'
        run: |
          cd backend
          npm update
          npm audit fix --force || true

      - name: 🔄 Update Frontend Dependencies
        if: steps.frontend-updates.outputs.updates == 'true'
        run: |
          cd frontend
          npm update
          npm audit fix --force || true

      - name: 🧪 Test After Updates
        if: steps.backend-updates.outputs.updates == 'true' || steps.frontend-updates.outputs.updates == 'true'
        run: |
          # Test backend
          cd backend
          npm test || echo "Backend tests failed"
          
          # Test frontend
          cd ../frontend
          npm test || echo "Frontend tests failed"
          npm run build || echo "Frontend build failed"

      - name: 📋 Generate Update Summary
        if: steps.backend-updates.outputs.updates == 'true' || steps.frontend-updates.outputs.updates == 'true'
        id: summary
        run: |
          echo "## 📦 Dependency Updates Summary" > update_summary.md
          echo "" >> update_summary.md
          
          if [ "${{ steps.backend-updates.outputs.updates }}" == "true" ]; then
            echo "### Backend Updates" >> update_summary.md
            cd backend
            git diff --name-only package*.json | head -5 >> ../update_summary.md
            cd ..
          fi
          
          if [ "${{ steps.frontend-updates.outputs.updates }}" == "true" ]; then
            echo "### Frontend Updates" >> update_summary.md
            cd frontend
            git diff --name-only package*.json | head -5 >> ../update_summary.md
            cd ..
          fi
          
          echo "" >> update_summary.md
          echo "### Security Information" >> update_summary.md
          echo "- Security audits have been run" >> update_summary.md
          echo "- Automated fixes have been applied where possible" >> update_summary.md
          echo "" >> update_summary.md
          echo "### Testing" >> update_summary.md
          echo "- Basic tests have been executed" >> update_summary.md
          echo "- Build process has been validated" >> update_summary.md
          echo "" >> update_summary.md
          echo "🤖 Auto-generated by dependency update workflow" >> update_summary.md

      - name: 🔀 Create Pull Request
        if: steps.backend-updates.outputs.updates == 'true' || steps.frontend-updates.outputs.updates == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: |
            chore(deps): automated dependency updates
            
            - Updated backend and frontend dependencies
            - Applied security fixes where available
            - Ran basic tests to ensure compatibility
            
            🤖 Generated by automated dependency update workflow
          title: 🔄 Automated Dependency Updates
          body-path: update_summary.md
          branch: automated-dependency-updates
          delete-branch: true
          labels: |
            dependencies
            automated
            maintenance