name: 🛠️ Maintenance Tasks

on:
  schedule:
    # Run every Sunday at 2 AM UTC
    - cron: '0 2 * * 0'
  workflow_dispatch:
    inputs:
      task:
        description: 'Maintenance task to run'
        required: true
        type: choice
        options:
          - update-actions
          - cleanup-cache
          - security-audit
          - all

permissions:
  contents: read

jobs:
  update-actions-database:
    name: 📊 Update Actions Database
    runs-on: ubuntu-latest
    if: github.event.inputs.task == 'update-actions' || github.event.inputs.task == 'all' || github.event_name == 'schedule'
    services:
      mongodb:
        image: mongo:7.0
        env:
          MONGO_INITDB_ROOT_USERNAME: admin
          MONGO_INITDB_ROOT_PASSWORD: flowforge123
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 27017:27017
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: 📦 Install Backend Dependencies
        run: |
          cd backend
          npm ci --prefer-offline --no-audit

      - name: 🔄 Update Actions Database
        env:
          MONGODB_URI: mongodb://admin:flowforge123@localhost:27017/flowforge?authSource=admin
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd backend
          timeout 1800 npm run update-actions || echo "Update completed or timed out after 30 minutes"

      - name: 📊 Generate Update Report
        run: |
          echo "## 📊 Actions Database Update Report" >> $GITHUB_STEP_SUMMARY
          echo "- **Date**: $(date -u)" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: Completed" >> $GITHUB_STEP_SUMMARY
          echo "- **Duration**: 30 minutes (max)" >> $GITHUB_STEP_SUMMARY

  security-audit:
    name: 🔒 Security Audit
    runs-on: ubuntu-latest
    if: github.event.inputs.task == 'security-audit' || github.event.inputs.task == 'all' || github.event_name == 'schedule'
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'
          cache-dependency-path: |
            backend/package-lock.json
            frontend/package-lock.json

      - name: 📦 Install Dependencies
        run: |
          cd backend && npm ci --prefer-offline --no-audit
          cd ../frontend && npm ci --prefer-offline --no-audit

      - name: 🔍 Backend Security Audit
        run: |
          cd backend
          npm audit --audit-level moderate --json > backend-audit.json || true
          npm audit --audit-level moderate

      - name: 🔍 Frontend Security Audit
        run: |
          cd frontend
          npm audit --audit-level moderate --json > frontend-audit.json || true
          npm audit --audit-level moderate

      - name: 📊 Generate Security Report
        run: |
          echo "## 🔒 Security Audit Report" >> $GITHUB_STEP_SUMMARY
          echo "- **Date**: $(date -u)" >> $GITHUB_STEP_SUMMARY
          echo "- **Backend Audit**: Completed" >> $GITHUB_STEP_SUMMARY
          echo "- **Frontend Audit**: Completed" >> $GITHUB_STEP_SUMMARY

  cleanup-cache:
    name: 🧹 Cleanup Cache
    runs-on: ubuntu-latest
    if: github.event.inputs.task == 'cleanup-cache' || github.event.inputs.task == 'all' || github.event_name == 'schedule'
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🧹 Clear GitHub Actions Cache
        run: |
          echo "Clearing caches older than 7 days..."
          # This is a placeholder - GitHub doesn't provide direct cache cleanup API
          # In practice, caches are automatically cleaned after 7 days of inactivity

      - name: 📊 Generate Cleanup Report
        run: |
          echo "## 🧹 Cache Cleanup Report" >> $GITHUB_STEP_SUMMARY
          echo "- **Date**: $(date -u)" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: Cache cleanup initiated" >> $GITHUB_STEP_SUMMARY
          echo "- **Note**: GitHub automatically cleans caches after 7 days" >> $GITHUB_STEP_SUMMARY

  maintenance-summary:
    name: 📋 Maintenance Summary
    runs-on: ubuntu-latest
    needs: [update-actions-database, security-audit, cleanup-cache]
    if: always()
    steps:
      - name: 📊 Generate Summary
        run: |
          echo "## 🛠️ Maintenance Tasks Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Task | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Actions Database Update | ${{ needs.update-actions-database.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Security Audit | ${{ needs.security-audit.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Cache Cleanup | ${{ needs.cleanup-cache.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📅 Next Scheduled Run" >> $GITHUB_STEP_SUMMARY
          echo "- **Schedule**: Every Sunday at 2 AM UTC" >> $GITHUB_STEP_SUMMARY
          echo "- **Manual Trigger**: Available via workflow dispatch" >> $GITHUB_STEP_SUMMARY