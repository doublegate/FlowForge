app-id: io.github.flowforge.FlowForge
runtime: org.freedesktop.Platform
runtime-version: '23.08'
sdk: org.freedesktop.Sdk
sdk-extensions:
  - org.freedesktop.Sdk.Extension.node18
command: flowforge-launcher
finish-args:
  - --share=network
  - --share=ipc
  - --socket=x11
  - --socket=wayland
  - --device=dri
  - --filesystem=home
  - --talk-name=org.freedesktop.portal.Documents
  - --env=NODE_ENV=production

modules:
  # Node.js environment
  - name: node
    buildsystem: simple
    build-commands:
      - /usr/lib/sdk/node18/install.sh
      - install -dm755 /app/bin
      - cp -a /usr/lib/sdk/node18/bin/* /app/bin/
      - cp -a /usr/lib/sdk/node18/lib/* /app/lib/

  # Frontend build
  - name: flowforge-frontend
    buildsystem: simple
    build-options:
      build-args:
        - --share=network
    sources:
      - type: dir
        path: ../frontend
    build-commands:
      - export PATH=/app/bin:$PATH
      - npm install --no-fund --no-audit
      - npm run build
      - install -dm755 /app/flowforge/frontend
      - cp -r dist/* /app/flowforge/frontend/

  # Backend
  - name: flowforge-backend  
    buildsystem: simple
    build-options:
      build-args:
        - --share=network
    sources:
      - type: dir
        path: ../backend
    build-commands:
      - export PATH=/app/bin:$PATH
      - npm install --production --no-fund --no-audit
      - install -dm755 /app/flowforge/backend
      - cp -r * /app/flowforge/backend/

  # Electron wrapper
  - name: flowforge-electron
    buildsystem: simple
    build-options:
      build-args:
        - --share=network
    sources:
      - type: dir
        path: ../electron
    build-commands:
      - export PATH=/app/bin:$PATH
      - npm install --production --no-fund --no-audit
      - install -dm755 /app/flowforge/electron
      - cp -r * /app/flowforge/electron/

  # Launcher script
  - name: flowforge-launcher
    buildsystem: simple
    sources:
      - type: script
        dest-filename: flowforge-launcher
        commands:
          - |
            #!/bin/bash
            export NODE_ENV=production
            export ELECTRON_DISABLE_SECURITY_WARNINGS=true
            
            # Create user data directory
            USER_DATA="$HOME/.var/app/io.github.flowforge.FlowForge"
            mkdir -p "$USER_DATA/config"
            mkdir -p "$USER_DATA/data/mongodb"
            
            # Check for config
            if [ ! -f "$USER_DATA/config/.env" ]; then
                echo "Creating default configuration..."
                cat > "$USER_DATA/config/.env" << 'ENVEOF'
            # FlowForge Configuration
            MONGODB_URI=mongodb://localhost:27017/flowforge
            NODE_ENV=production
            PORT=3002
            FRONTEND_URL=http://localhost:5173
            SESSION_SECRET=$(openssl rand -base64 32)
            
            # Add your API keys here:
            # GITHUB_TOKEN=your_github_token
            # OPENAI_API_KEY=your_openai_key
            ENVEOF
                echo "Configuration created at: $USER_DATA/config/.env"
                echo "Please edit this file to add your API keys."
            fi
            
            # Link config to backend
            mkdir -p /tmp/flowforge-backend
            cp -r /app/flowforge/backend/* /tmp/flowforge-backend/
            ln -sf "$USER_DATA/config/.env" /tmp/flowforge-backend/.env
            
            # Start backend
            cd /tmp/flowforge-backend
            node server.js &
            BACKEND_PID=$!
            
            # Wait for backend
            sleep 2
            
            # Start Electron app
            cd /app/flowforge/electron
            electron main.js
            
            # Cleanup
            kill $BACKEND_PID 2>/dev/null || true
    build-commands:
      - install -Dm755 flowforge-launcher /app/bin/flowforge-launcher

  # Desktop integration
  - name: flowforge-desktop
    buildsystem: simple
    sources:
      - type: file
        path: ../images/icon.png
        dest-filename: io.github.flowforge.FlowForge.png
    build-commands:
      - install -Dm644 io.github.flowforge.FlowForge.png /app/share/icons/hicolor/256x256/apps/io.github.flowforge.FlowForge.png
      - |
        cat > io.github.flowforge.FlowForge.desktop << 'DEOF'
        [Desktop Entry]
        Name=FlowForge
        Comment=Visual GitHub Actions Workflow Builder
        Exec=flowforge-launcher
        Icon=io.github.flowforge.FlowForge
        Terminal=false
        Type=Application
        Categories=Development;IDE;
        MimeType=text/yaml;application/x-yaml;
        DEOF
      - install -Dm644 io.github.flowforge.FlowForge.desktop /app/share/applications/io.github.flowforge.FlowForge.desktop
